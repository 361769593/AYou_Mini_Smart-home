#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('ayou-mini-smart-home-backend:server');
var http = require('http');
var aedes = require('aedes')();
var net = require('net');
var port = normalizePort(process.env.PORT || '3000');
var mqttPort = normalizePort(Number(process.env.PORT) + 1 || '9111');
app.set('port', port);
var server = http.createServer(app);
var mqttServer = net.createServer(aedes.handle);
server.listen(port);
console.log('监听http:' + port);
server.on('error', onError);
server.on('listening', onListening);
mqttServer.listen(mqttPort)
console.log('监听mqtt:' + mqttPort);

function normalizePort(val) {
    var port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}